.container {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.section {
  padding: 0rem;
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.headerContent {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.title {
  font-size: 1.125rem;
  font-weight: 600;
  margin: 0;
}

.description {
  font-size: 0.875rem;
  color: #6b7280;
  margin: 0.25rem 0 0 0;
}

.editorToggle {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  height: 32px; /* Add this to match common button/input heights */
}

.toggleLabel {
  display: flex; /* Add this */
  align-items: center; /* Add this */
  font-size: 0.875rem;
  font-weight: 500;
  height: 100%; /* Add this */
}

.codeBlock {
  font-family: monospace;
  font-size: 0.875rem;
  padding: 1rem;
  margin: 0;
  white-space: pre-wrap;
  background: none;
}

.formContainer {
  display: flex;
  flex-direction: column;
}

.formRow {
  display: flex;
  align-items: center;
}

.label {
  width: 33.333%;
  font-size: 0.875rem;
  font-weight: 500;
}

.required {
  color: #ef4444;
}

.input {
  flex: 1;
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
}

.textarea {
  composes: input;
  font-family: monospace;
  resize: vertical;
  min-height: 4rem;
}

.inputDescription {
  font-size: 0.75rem;
  color: #6b7280;
}

.actions {
  display: flex;
  justify-content: flex-end;
  gap: 0.5rem;
  margin-top: 1rem;
}

.button {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.375rem 0.75rem;
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
}

.button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.buttonPrimary {
  composes: button;
  background-color: #2563eb;
  color: white;
}

.buttonPrimary:hover:not(:disabled) {
  background-color: #1d4ed8;
}

.buttonOutline {
  composes: button;
  background-color: transparent;
}

.buttonOutline:hover:not(:disabled) {
  background-color: #f9fafb;
}

.buttonGhost {
  composes: button;
  background-color: transparent;
}

.buttonGhost:hover:not(:disabled) {
  background-color: #f9fafb;
}

.responseSection {
  composes: section;
}

.responseLabel {
  font-size: 0.75rem;
  color: #6b7280;
  margin-bottom: 12px;
}

.alert {
  padding: 0.75rem 1rem;
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.alertSuccess {
  composes: alert;
  background-color: #f0fdf4;
  color: #15803d;
}

.alertError {
  composes: alert;
  background-color: #fef2f2;
  color: #dc2626;
}

.icon {
  width: 1rem;
  height: 1rem;
}

/* Input base styles */
.input {
  width: 100%;
  min-width: 0;
  border: 1px solid var(--ifm-color-emphasis-300);
  border-radius: var(--ifm-global-radius);
  background-color: var(--ifm-background-color);
  color: var(--ifm-font-color-base);
  font-family: var(--ifm-font-family-base);
  font-size: 0.875rem;
  line-height: 1.5;
  padding: 0.5rem 0.75rem;
  transition: border-color 0.15s ease-in-out;
}

.input:focus {
  outline: none;
  border-color: var(--ifm-color-primary);
  box-shadow: 0 0 0 2px rgba(var(--ifm-color-primary-rgb), 0.1);
}

.input:disabled {
  background-color: var(--ifm-color-emphasis-100);
  cursor: not-allowed;
}

.input::placeholder {
  color: var(--ifm-color-emphasis-500);
}

/* Textarea specific styles */
.textarea {
  composes: input;
  min-height: 80px;
  resize: vertical;
  font-family: var(--ifm-font-family-monospace);
  white-space: pre;
  tab-size: 2;
}

/* Toggle switch styles */
.toggleSwitch {
  position: relative;
  width: 36px;
  height: 20px;
}

.toggleSwitch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--ifm-color-emphasis-300);
  transition: 0.2s;
  border-radius: 20px;
}

.slider:before {
  position: absolute;
  content: "";
  height: 16px;
  width: 16px;
  left: 2px;
  bottom: 2px;
  background-color: white;
  transition: 0.2s;
  border-radius: 50%;
}

input:checked + .slider {
  background-color: var(--ifm-color-primary);
}

input:focus + .slider {
  box-shadow: 0 0 0 2px rgba(var(--ifm-color-primary-rgb), 0.1);
}

input:checked + .slider:before {
  transform: translateX(16px);
}

/* Form field spacing */
.formRow {
  margin-bottom: 0.5rem;
  display: flex;
  align-items: flex-start;
  gap: 1rem;
}

.label {
  flex: 0 0 33.333%;
  padding-top: 0.5rem;
  color: var(--ifm-font-color-base);
  font-weight: 500;
}

.required {
  color: var(--ifm-color-danger);
  margin-left: 0.25rem;
}

.inputWrapper {
  flex: 1;
}

/* Input variants */
.inputError {
  composes: input;
  border-color: var(--ifm-color-danger);
}

.inputError:focus {
  box-shadow: 0 0 0 2px rgba(var(--ifm-color-danger-rgb), 0.1);
}

/* Helper text */
.helperText {
  margin-top: 0.375rem;
  font-size: 0.75rem;
  color: var(--ifm-color-emphasis-600);
}

.errorText {
  composes: helperText;
  color: var(--ifm-color-danger);
}

/* Dark mode adjustments */
[data-theme='dark'] .input {
  background-color: var(--ifm-background-color);
  border-color: var(--ifm-color-emphasis-300);
}

[data-theme='dark'] .input:focus {
  border-color: var(--ifm-color-primary);
}

[data-theme='dark'] .slider {
  background-color: var(--ifm-color-emphasis-400);
}

[data-theme='dark'] .slider:before {
  background-color: var(--ifm-color-emphasis-100);
}

/* Base button styles */
.button {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  font-family: var(--ifm-font-family-base);
  font-size: 0.875rem;
  font-weight: 500;
  line-height: 1.5;
  text-align: center;
  text-decoration: none;
  border: 1px solid transparent;
  border-radius: var(--ifm-global-radius);
  cursor: pointer;
  transition: all 0.2s ease;
  user-select: none;
  white-space: nowrap;
}

.button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  pointer-events: none;
}

.button:focus {
  outline: none;
}

.button:focus-visible {
  box-shadow: 0 0 0 2px var(--ifm-color-emphasis-200),
              0 0 0 4px var(--ifm-color-primary);
}

/* Icon styling */
.button .icon {
  width: 1rem;
  height: 1rem;
  flex-shrink: 0;
}

/* Primary button */
.buttonPrimary {
  composes: button;
  background-color: var(--ifm-color-primary);
  color: white;
  border-color: var(--ifm-color-primary);
}

.buttonPrimary:hover:not(:disabled) {
  background-color: var(--ifm-color-primary-darker);
  border-color: var(--ifm-color-primary-darker);
}

.buttonPrimary:active:not(:disabled) {
  background-color: var(--ifm-color-primary-darkest);
  border-color: var(--ifm-color-primary-darkest);
}

/* Secondary button */
.buttonSecondary {
  composes: button;
  background-color: var(--ifm-color-emphasis-200);
  color: var(--ifm-color-emphasis-700);
  border-color: var(--ifm-color-emphasis-200);
}

.buttonSecondary:hover:not(:disabled) {
  background-color: var(--ifm-color-emphasis-300);
  border-color: var(--ifm-color-emphasis-300);
  color: var(--ifm-color-emphasis-800);
}

.buttonSecondary:active:not(:disabled) {
  background-color: var(--ifm-color-emphasis-400);
  border-color: var(--ifm-color-emphasis-400);
}

/* Outline button */
.buttonOutline {
  composes: button;
  background-color: transparent;
  border-color: var(--ifm-color-emphasis-300);
  color: var(--ifm-color-emphasis-700);
}

.buttonOutline:hover:not(:disabled) {
  background-color: var(--ifm-color-emphasis-100);
  border-color: var(--ifm-color-emphasis-400);
  color: var(--ifm-color-emphasis-800);
}

.buttonOutline:active:not(:disabled) {
  background-color: var(--ifm-color-emphasis-200);
  border-color: var(--ifm-color-emphasis-500);
}

/* Ghost button */
.buttonGhost {
  composes: button;
  background-color: transparent;
  color: var(--ifm-color-emphasis-700);
}

.buttonGhost:hover:not(:disabled) {
  background-color: var(--ifm-color-emphasis-100);
  color: var(--ifm-color-emphasis-800);
}

.buttonGhost:active:not(:disabled) {
  background-color: var(--ifm-color-emphasis-200);
}

/* Danger button */
.buttonDanger {
  composes: button;
  background-color: var(--ifm-color-danger);
  color: white;
  border-color: var(--ifm-color-danger);
}

.buttonDanger:hover:not(:disabled) {
  background-color: var(--ifm-color-danger-darker);
  border-color: var(--ifm-color-danger-darker);
}

.buttonDanger:active:not(:disabled) {
  background-color: var(--ifm-color-danger-darkest);
  border-color: var(--ifm-color-danger-darkest);
}

/* Button sizes */
.buttonSm {
  padding: 0.375rem 0.75rem;
  font-size: 0.8125rem;
}

.buttonLg {
  padding: 0.625rem 1.25rem;
  font-size: 1rem;
}

/* Loading state */
.buttonLoading {
  position: relative;
  color: transparent !important;
}

.buttonLoading::after {
  content: '';
  position: absolute;
  width: 1rem;
  height: 1rem;
  top: calc(50% - 0.5rem);
  left: calc(50% - 0.5rem);
  border: 2px solid currentColor;
  border-right-color: transparent;
  border-radius: 50%;
  animation: button-spin 0.75s linear infinite;
}

@keyframes button-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Button group */
.buttonGroup {
  display: inline-flex;
  gap: 0.5rem;
}

/* Dark mode adjustments */
[data-theme='dark'] .buttonOutline {
  border-color: var(--ifm-color-emphasis-400);
  color: var(--ifm-color-emphasis-500);
}

[data-theme='dark'] .buttonOutline:hover:not(:disabled) {
  border-color: var(--ifm-color-emphasis-500);
  color: var(--ifm-color-emphasis-400);
}

[data-theme='dark'] .buttonGhost {
  color: var(--ifm-color-emphasis-500);
}

[data-theme='dark'] .buttonGhost:hover:not(:disabled) {
  background-color: rgba(255, 255, 255, 0.05);
  color: var(--ifm-color-emphasis-400);
}